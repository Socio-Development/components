@import '../variables/colors';
@import '../theme/mode';
@import '../theme/shape';

@mixin alert-mode($mode) {
  $theme: map-get($theme--mode, $mode);
  $mode-bg: map-get($theme, bg-light);
  $mode-border: map-get($theme, border-light);
  $mode-color: map-get($theme, text-blend);

  &.Alert--#{$mode} {
    background-color: $mode-bg;
    border-color: $mode-border;
    color: $mode-color;
  }
}

@mixin alert-shape($shape) {
  &.Alert--#{$shape} {
    border-radius: map-get($theme--shape, $shape);
    @if $shape == pill {
      scrollbar-color: var($color--gray-500) transparent;
    }
  }
}

.Alert {
  $spacing-x: 1.6rem;
  $spacing-y: .75rem;
  $text-size: 1rem;

  border: 1px solid transparent;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-bottom: 1rem;
  min-height: 3rem;

  .Alert--text {
    align-items: center;
    display: flex;
    font-size: $text-size;
    line-height: 1.5;
    margin: 0 $spacing-x;
    padding: $spacing-y 0;
  }

  &.Alert--dismissable {
    .Alert--text {
      margin-right: 0;
    }
  }

  /* Exit animation */
  &.Alert--exit {
    opacity: 0;
    transition: 1s;

    &.Alert--exit-left {
      margin-left: -10rem;
      margin-right: 10rem;
    }
    &.Alert--exit-right {
      margin-left: 10rem;
      margin-right: -10rem;
    }

    .ButtonClose {
      visibility: hidden;
    }
  }

  /* Mode */
  @include alert-mode(danger);
  @include alert-mode(dark);
  @include alert-mode(default);
  @include alert-mode(info);
  @include alert-mode(primary);
  @include alert-mode(success);

  /* Shape */
  &.Alert--pill {
    height: $text-size + ($spacing-y * 2);
    scrollbar-color: $color--gray-500 transparent;
    .Alert--text {
      line-height: 1;
      overflow-x: scroll;
      white-space: nowrap;
    }
  }
  @include alert-shape(pill);
  @include alert-shape(rounded);
  @include alert-shape(soft);
  @include alert-shape(square);
}
